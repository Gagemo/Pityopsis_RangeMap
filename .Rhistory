################ Checks & prevents re-download #################################
species_list <- c("L.aspera", "L.chapmanii", "L.elegantula", "L.garberi",
"L.gholsonii", "L.laevigata", "L.ohlingerae", "L.patens",
"L.pauciflora", "L.provincialis", "L.quadriflora",
"L.resinosa", "L.secunda", "L.squarrulosa", "L.tenuifolia")
for (species in species_list) {
# Construct dynamic file name
search_fn <- paste0(species, "_FL.Rdata")
# Check if file exists
if (file.exists(search_fn)) {
load(search_fn)
} else {
# Construct dynamic taxon name
taxon_name <- paste0("Liatris ", gsub("\\.", " ", species))  # Corrected formatting
# Get iNaturalist observations
inat_df_name <- paste0("inat_", species, "_df")
assign(inat_df_name, get_inat_obs(bounds = FL_bb[c(2,1,4,3)],
taxon_name = taxon_name,
year = NULL,
month = NULL,
quality_grade = "research",
maxresults = 1000))
# Save the data
save(list = inat_df_name, file = search_fn)
}
}
for (species in species_list) {
# Construct dynamic data frame names
inat_df_name <- paste0("inat_", species, "_df")
pcsp_popup_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
# Apply the operations
assign(pcsp_popup_sf_name,
get(inat_df_name) %>%
select(longitude, latitude, datetime, common_name, scientific_name, image_url, user_login) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_intersection(FL_sf) %>%
mutate(popup_html = paste0("<p><b>", common_name, "</b><br/>",
"<i>", scientific_name, "</i></p>",
"<p>Observed: ", datetime, "<br/>",
"User: ", user_login, "</p>",
"<p><img src='", image_url,
"' style='width:100%;'/></p>"))
)
}
############################# Creates Map  #####################################
# Assign colors for species
species_colors <- c(
"L.aspera" = "#E41A1C",
"L.chapmanii" = "#377EB8",
"L.elegantula" = "#4DAF4A",
"L.garberi" = "#984EA3",
"L.gholsonii" = "#FF7F00",
"L.laevigata" = "#FFFF33",
"L.ohlingerae" = "#A65628",
"L.patens" = "#F781BF",
"L.pauciflora" = "#999999",
"L.provincialis" = "#B3DE69",
"L.quadriflora" = "blue",
"L.resinosa" = "white",
"L.secunda" = "#9EDAE5",
"L.squarrulosa" = "black",
"L.tenuifolia" = "#1B9E77"
)
# Initialize a Leaflet map
Liatris_map <- leaflet() %>%
addTiles()  # Add a basemap layer
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = species_colors[[species]] %||% "#000000",
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Add a manual color legend to the bottom left
Liatris_map <- Liatris_map %>%
addLegend(
position = "bottomleft",  # Change position from "bottomright" to "bottomleft"
title = "Liatris Species",
colors = species_colors[species_list],
labels = gsub("\\.", " ", species_list),
opacity = 1
)
# Display the map
Liatris_map
# Save the interactive map
saveWidget(widget = Liatris_map,
file = "Liatris.html",
selfcontained = TRUE)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black"
fillColor = species_colors[[species]] %||% "#000000",
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black",
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black",
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Add a manual color legend to the bottom left
Liatris_map <- Liatris_map %>%
addLegend(
position = "bottomleft",  # Change position from "bottomright" to "bottomleft"
title = "Liatris Species",
colors = species_colors[species_list],
labels = gsub("\\.", " ", species_list),
opacity = 1
)
# Display the map
Liatris_map
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Add a manual color legend to the bottom left
Liatris_map <- Liatris_map %>%
addLegend(
position = "bottomleft",  # Change position from "bottomright" to "bottomleft"
title = "Liatris Species",
colors = species_colors[species_list],
labels = gsub("\\.", " ", species_list),
opacity = 1
)
# Display the map
Liatris_map
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Display the map
Liatris_map
################################################################################
################################################################################
#########################   Liatris Range Map  ##################################
######################### University of Florida #################################
#########################    Gage LaPierre   ####################################
#########################     2022       ########################################
################################################################################
################################################################################
######################### Clears Environment & History ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################   Installs Packages  ##############################
list.of.packages <- c("tidyverse", "sp", "raster", "rgbif", "tmap", "rinat",
"leaflet", "conflicted", "sf", "rangemap", "mapview",
"htmlwidgets")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################   Loads Packages   ##############################
library(tidyverse)
library(sp)
library(raster)
library(tmap)
library(rinat)
library(leaflet)
library(conflicted)
library(sf)
library(rgbif)
library(mapview)
library(htmlwidgets)
################## Prevents Conflict with Functions  ##########################
conflict_prefer("filter", "dplyr", quiet = TRUE)
conflict_prefer("count", "dplyr", quiet = TRUE)
conflict_prefer("select", "dplyr", quiet = TRUE)
conflict_prefer("arrange", "dplyr", quiet = TRUE)
############ Loads Data & Transforms Map Data to Correct Format ################
FL_sf <- st_read("geojson-fl-counties-fips.json", quiet = TRUE) %>%
st_transform(4326)
################# Creates Bounding Box to Pull iNat Data ######################
FL_bb <- FL_sf %>%
st_bbox()
################ Downloads iNat data for each species ##########################
################ Checks & prevents re-download #################################
species_list <- c("L.aspera", "L.chapmanii", "L.elegantula", "L.garberi",
"L.gholsonii", "L.laevigata", "L.ohlingerae", "L.patens",
"L.pauciflora", "L.provincialis", "L.quadriflora",
"L.resinosa", "L.secunda", "L.squarrulosa", "L.tenuifolia")
for (species in species_list) {
# Construct dynamic file name
search_fn <- paste0(species, "_FL.Rdata")
# Check if file exists
if (file.exists(search_fn)) {
load(search_fn)
} else {
# Construct dynamic taxon name
taxon_name <- paste0("Liatris ", gsub("\\.", " ", species))  # Corrected formatting
# Get iNaturalist observations
inat_df_name <- paste0("inat_", species, "_df")
assign(inat_df_name, get_inat_obs(bounds = FL_bb[c(2,1,4,3)],
taxon_name = taxon_name,
year = NULL,
month = NULL,
quality_grade = "research",
maxresults = 1000))
# Save the data
save(list = inat_df_name, file = search_fn)
}
}
for (species in species_list) {
# Construct dynamic data frame names
inat_df_name <- paste0("inat_", species, "_df")
pcsp_popup_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
# Apply the operations
assign(pcsp_popup_sf_name,
get(inat_df_name) %>%
select(longitude, latitude, datetime, common_name, scientific_name, image_url, user_login) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_intersection(FL_sf) %>%
mutate(popup_html = paste0("<p><b>", common_name, "</b><br/>",
"<i>", scientific_name, "</i></p>",
"<p>Observed: ", datetime, "<br/>",
"User: ", user_login, "</p>",
"<p><img src='", image_url,
"' style='width:100%;'/></p>"))
)
}
############################# Creates Map  #####################################
# Assign colors for species
species_colors <- c(
"L.aspera" = "#E41A1C",
"L.chapmanii" = "#377EB8",
"L.elegantula" = "#4DAF4A",
"L.garberi" = "#984EA3",
"L.gholsonii" = "#FF7F00",
"L.laevigata" = "#FFFF33",
"L.ohlingerae" = "#A65628",
"L.patens" = "#F781BF",
"L.pauciflora" = "#999999",
"L.provincialis" = "#B3DE69",
"L.quadriflora" = "blue",
"L.resinosa" = "white",
"L.secunda" = "#9EDAE5",
"L.squarrulosa" = "black",
"L.tenuifolia" = "#1B9E77"
)
# Initialize a Leaflet map
Liatris_map <- leaflet() %>%
addTiles()  # Add a basemap layer
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Display the map
Liatris_map
# Save the interactive map
saveWidget(widget = Liatris_map,
file = "Liatris.html",
selfcontained = TRUE)
################################################################################
################################################################################
#########################   Liatris Range Map  ##################################
######################### University of Florida #################################
#########################    Gage LaPierre   ####################################
#########################     2022       ########################################
################################################################################
################################################################################
######################### Clears Environment & History ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################   Installs Packages  ##############################
list.of.packages <- c("tidyverse", "sp", "raster", "rgbif", "tmap", "rinat",
"leaflet", "conflicted", "sf", "rangemap", "mapview",
"htmlwidgets")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################   Loads Packages   ##############################
library(tidyverse)
library(sp)
library(raster)
library(tmap)
library(rinat)
library(leaflet)
library(conflicted)
library(sf)
library(rgbif)
library(mapview)
library(htmlwidgets)
################## Prevents Conflict with Functions  ##########################
conflict_prefer("filter", "dplyr", quiet = TRUE)
conflict_prefer("count", "dplyr", quiet = TRUE)
conflict_prefer("select", "dplyr", quiet = TRUE)
conflict_prefer("arrange", "dplyr", quiet = TRUE)
############ Loads Data & Transforms Map Data to Correct Format ################
FL_sf <- st_read("geojson-fl-counties-fips.json", quiet = TRUE) %>%
st_transform(4326)
################# Creates Bounding Box to Pull iNat Data ######################
FL_bb <- FL_sf %>%
st_bbox()
################ Downloads iNat data for each species ##########################
################ Checks & prevents re-download #################################
species_list <- c("L.aspera", "L.chapmanii", "L.elegantula", "L.garberi",
"L.gholsonii", "L.laevigata", "L.ohlingerae", "L.patens",
"L.pauciflora", "L.provincialis", "L.quadriflora",
"L.resinosa", "L.secunda", "L.squarrulosa", "L.tenuifolia")
for (species in species_list) {
# Construct dynamic file name
search_fn <- paste0(species, "_FL.Rdata")
# Check if file exists
if (file.exists(search_fn)) {
load(search_fn)
} else {
# Construct dynamic taxon name
taxon_name <- paste0("Liatris ", gsub("\\.", " ", species))  # Corrected formatting
# Get iNaturalist observations
inat_df_name <- paste0("inat_", species, "_df")
assign(inat_df_name, get_inat_obs(bounds = FL_bb[c(2,1,4,3)],
taxon_name = taxon_name,
year = NULL,
month = NULL,
quality_grade = "research",
maxresults = 1000))
# Save the data
save(list = inat_df_name, file = search_fn)
}
}
for (species in species_list) {
# Construct dynamic data frame names
inat_df_name <- paste0("inat_", species, "_df")
pcsp_popup_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
# Apply the operations
assign(pcsp_popup_sf_name,
get(inat_df_name) %>%
select(longitude, latitude, datetime, common_name, scientific_name, image_url, user_login) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_intersection(FL_sf) %>%
mutate(popup_html = paste0("<p><b>", common_name, "</b><br/>",
"<i>", scientific_name, "</i></p>",
"<p>Observed: ", datetime, "<br/>",
"User: ", user_login, "</p>",
"<p><img src='", image_url,
"' style='width:100%;'/></p>"))
)
}
############################# Creates Map  #####################################
# Assign colors for species
species_colors <- c(
"L.aspera" = "#E41A1C",
"L.chapmanii" = "#377EB8",
"L.elegantula" = "#4DAF4A",
"L.garberi" = "#984EA3",
"L.gholsonii" = "#FF7F00",
"L.laevigata" = "#FFFF33",
"L.ohlingerae" = "#A65628",
"L.patens" = "#F781BF",
"L.pauciflora" = "#999999",
"L.provincialis" = "#B3DE69",
"L.quadriflora" = "blue",
"L.resinosa" = "white",
"L.secunda" = "#9EDAE5",
"L.squarrulosa" = "black",
"L.tenuifolia" = "#1B9E77"
)
# Initialize a Leaflet map
Liatris_map <- leaflet() %>%
addTiles()  # Add a basemap layer
# Loop through species list and add markers with layer control
for (species in species_list) {
inat_sf_name <- paste0("inat_", species, "_pcsp_popup_sf")
inat_sf <- get(inat_sf_name)
# Add species observation points
Liatris_map <- Liatris_map %>%
addCircleMarkers(
data = inat_sf,
radius = 4,
color = "black", weight = 1,
fillColor = species_colors[[species]] %||% "#000000",
fillOpacity = 1,
popup = ~popup_html,
group = species  # Remove "Observations"
)
}
# Add a layer control to toggle species on/off
Liatris_map <- Liatris_map %>%
addLayersControl(
overlayGroups = species_list,
options = layersControlOptions(collapsed = FALSE)
)
# Add a manual color legend to the bottom left
Liatris_map <- Liatris_map %>%
addLegend(
position = "bottomleft",  # Change position from "bottomright" to "bottomleft"
title = "Liatris Species",
colors = species_colors[species_list],
labels = gsub("\\.", " ", species_list),
opacity = 1
)
# Display the map
Liatris_map
# Save the interactive map
saveWidget(widget = Liatris_map,
file = "Liatris.html",
selfcontained = TRUE)
